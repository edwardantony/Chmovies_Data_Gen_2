schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type CH_Gen2_AudioTrack {
  code: String
  createdAt: AWSDateTime!
  id: ID!
  language: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

type CH_Gen2_AudioTrackConnection {
  items: [CH_Gen2_AudioTrack]
  nextToken: String
}

type CH_Gen2_Category {
  createdAt: AWSDateTime!
  id: ID!
  name: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

type CH_Gen2_CategoryConnection {
  items: [CH_Gen2_Category]
  nextToken: String
}

type CH_Gen2_Content @aws_api_key @aws_cognito_user_pools @aws_iam {
  analyticsId: Int @aws_cognito_user_pools(cognito_groups : ["Admin"])
  audienceDislike: Int!
  audienceLike: Int!
  audienceRating: Float!
  audioTracks: [CH_Gen2_AudioTrack]
  categories: [CH_Gen2_Category]
  countries: [CH_Gen2_Country]
  createdAt: AWSDateTime!
  description: String
  duration: Int!
  genres: [CH_Gen2_Genre]
  id: ID!
  imagesDetails: AWSJSON
  isFeatured: Boolean!
  localTitle: String!
  maturityRating: String!
  partnerId: ID @aws_cognito_user_pools(cognito_groups : ["Admin"])
  releaseDate: String
  reviews: [CH_Gen2_Review]
  sortOrder: Int!
  status: CH_Gen2_ContentStatus!
  subtitles: [CH_Gen2_Subtitle]
  title: String!
  type: CH_Gen2_ContentType!
  updatedAt: AWSDateTime!
  videoConverted: AWSJSON!
  videoId: ID!
  videoOriginal: AWSJSON @aws_cognito_user_pools(cognito_groups : ["Admin"])
}

type CH_Gen2_ContentConnection {
  items: [CH_Gen2_Content]
  nextToken: String
}

type CH_Gen2_Country {
  code: String
  createdAt: AWSDateTime!
  id: ID!
  name: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

type CH_Gen2_CountryConnection {
  items: [CH_Gen2_Country]
  nextToken: String
}

type CH_Gen2_Favorite {
  content: CH_Gen2_Content!
  contentId: ID!
  createdAt: AWSDateTime!
  id: ID!
  user: CH_Gen2_User!
  userId: ID!
}

type CH_Gen2_FavoriteConnection {
  items: [CH_Gen2_Favorite]
  nextToken: String
}

type CH_Gen2_Genre {
  createdAt: AWSDateTime!
  id: ID!
  name: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

type CH_Gen2_GenreConnection {
  items: [CH_Gen2_Genre]
  nextToken: String
}

type CH_Gen2_Invoice {
  amount: Float!
  billingPeriod: String
  createdAt: AWSDateTime!
  currency: String!
  discountAmount: Float
  dueDate: String!
  id: ID!
  invoiceDate: String!
  invoiceNumber: String!
  payment: CH_Gen2_Payment
  paymentId: ID
  pdfUrl: String
  status: CH_Gen2_InvoiceStatus!
  subscription: CH_Gen2_Subscription
  subscriptionId: ID
  taxAmount: Float
  totalAmount: Float!
  updatedAt: AWSDateTime!
  user: CH_Gen2_User!
  userId: ID!
}

type CH_Gen2_InvoiceConnection {
  items: [CH_Gen2_Invoice]
  nextToken: String
}

type CH_Gen2_Notification {
  createdAt: AWSDateTime!
  id: ID!
  isRead: Boolean!
  message: String!
  readAt: AWSDateTime
  relatedId: String
  relatedType: String
  title: String!
  type: CH_Gen2_NotificationType!
  user: CH_Gen2_User!
  userId: ID!
}

type CH_Gen2_NotificationConnection {
  items: [CH_Gen2_Notification]
  nextToken: String
}

type CH_Gen2_Payment {
  amount: Float!
  createdAt: AWSDateTime!
  currency: String!
  description: String
  id: ID!
  metadata: AWSJSON
  paymentDate: AWSDateTime!
  paymentGateway: String!
  paymentMethod: String!
  sortOrder: Int!
  status: CH_Gen2_PaymentStatus!
  subscription: CH_Gen2_Subscription
  subscriptionId: ID
  transactionId: String!
  updatedAt: AWSDateTime!
  user: CH_Gen2_User!
  userId: ID!
}

type CH_Gen2_PaymentConnection {
  items: [CH_Gen2_Payment]
  nextToken: String
}

type CH_Gen2_Review {
  content: CH_Gen2_Content!
  contentId: ID!
  createdAt: AWSDateTime!
  id: ID!
  isApproved: Boolean!
  rating: Int!
  reviewText: String
  updatedAt: AWSDateTime!
  user: CH_Gen2_User!
  userId: ID!
}

type CH_Gen2_ReviewConnection {
  items: [CH_Gen2_Review]
  nextToken: String
}

type CH_Gen2_Subscription {
  autoRenew: Boolean!
  cancellationDate: String
  cancellationReason: String
  createdAt: AWSDateTime!
  endDate: String!
  id: ID!
  lastPaymentDate: AWSDateTime
  nextBillingDate: String
  paymentMethod: String
  plan: CH_Gen2_SubscriptionPlan!
  planId: ID!
  sortOrder: Int!
  startDate: String!
  status: CH_Gen2_SubscriptionStatus!
  updatedAt: AWSDateTime!
  user: CH_Gen2_User!
  userId: ID!
}

type CH_Gen2_SubscriptionConnection {
  items: [CH_Gen2_Subscription]
  nextToken: String
}

type CH_Gen2_SubscriptionPlan {
  billingCycle: CH_Gen2_BillingCycle!
  createdAt: AWSDateTime!
  currency: String!
  description: String
  durationDays: Int!
  features: AWSJSON
  id: ID!
  isActive: Boolean!
  maxScreens: Int!
  name: String!
  price: Float!
  sortOrder: Int!
  updatedAt: AWSDateTime!
  videoQuality: CH_Gen2_VideoQuality!
}

type CH_Gen2_SubscriptionPlanConnection {
  items: [CH_Gen2_SubscriptionPlan]
  nextToken: String
}

type CH_Gen2_Subtitle {
  code: String
  createdAt: AWSDateTime!
  id: ID!
  language: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

type CH_Gen2_SubtitleConnection {
  items: [CH_Gen2_Subtitle]
  nextToken: String
}

type CH_Gen2_User @aws_api_key @aws_cognito_user_pools @aws_iam {
  accountStatus: CH_Gen2_AccountStatus!
  cognitoId: String!
  country: String
  createdAt: AWSDateTime!
  dateOfBirth: String
  email: String! @aws_cognito_user_pools(cognito_groups : ["Admin"])
  favorites: [CH_Gen2_Favorite] @aws_api_key
  firstName: String
  gender: CH_Gen2_Gender
  id: ID!
  invoices: [CH_Gen2_Invoice] @aws_cognito_user_pools(cognito_groups : ["Admin"])
  languagePreference: String!
  lastLogin: AWSDateTime
  lastName: String
  maturityPreference: String!
  notifications: [CH_Gen2_Notification]
  payments: [CH_Gen2_Payment] @aws_cognito_user_pools(cognito_groups : ["Admin"])
  phoneNumber: String @aws_cognito_user_pools(cognito_groups : ["Admin"])
  profilePicture: String
  reviews: [CH_Gen2_Review]
  subscriptionStatus: String!
  subscriptions: [CH_Gen2_Subscription] @aws_cognito_user_pools
  updatedAt: AWSDateTime!
  username: String
  watchHistory: [CH_Gen2_WatchHistory] @aws_cognito_user_pools
}

type CH_Gen2_UserConnection {
  items: [CH_Gen2_User]
  nextToken: String
}

type CH_Gen2_WatchHistory {
  content: CH_Gen2_Content!
  contentId: ID!
  createdAt: AWSDateTime!
  deviceInfo: AWSJSON
  duration: Int!
  id: ID!
  lastWatchedAt: AWSDateTime!
  progress: Int!
  updatedAt: AWSDateTime!
  user: CH_Gen2_User!
  userId: ID!
}

type CH_Gen2_WatchHistoryConnection {
  items: [CH_Gen2_WatchHistory]
  nextToken: String
}

type Mutation {
  createCH_Gen2_AudioTrack(input: CreateCH_Gen2_AudioTrackInput!): CH_Gen2_AudioTrack
  createCH_Gen2_Category(input: CreateCH_Gen2_CategoryInput!): CH_Gen2_Category
  createCH_Gen2_Content(input: CreateCH_Gen2_ContentInput!): CH_Gen2_Content
  createCH_Gen2_Country(input: CreateCH_Gen2_CountryInput!): CH_Gen2_Country
  createCH_Gen2_Favorite(input: CreateCH_Gen2_FavoriteInput!): CH_Gen2_Favorite
  createCH_Gen2_Genre(input: CreateCH_Gen2_GenreInput!): CH_Gen2_Genre
  createCH_Gen2_Invoice(input: CreateCH_Gen2_InvoiceInput!): CH_Gen2_Invoice
  createCH_Gen2_Notification(input: CreateCH_Gen2_NotificationInput!): CH_Gen2_Notification
  createCH_Gen2_Payment(input: CreateCH_Gen2_PaymentInput!): CH_Gen2_Payment
  createCH_Gen2_Review(input: CreateCH_Gen2_ReviewInput!): CH_Gen2_Review
  createCH_Gen2_Subscription(input: CreateCH_Gen2_SubscriptionInput!): CH_Gen2_Subscription
  createCH_Gen2_SubscriptionPlan(input: CreateCH_Gen2_SubscriptionPlanInput!): CH_Gen2_SubscriptionPlan
  createCH_Gen2_Subtitle(input: CreateCH_Gen2_SubtitleInput!): CH_Gen2_Subtitle
  createCH_Gen2_User(input: CreateCH_Gen2_UserInput!): CH_Gen2_User
  createCH_Gen2_WatchHistory(input: CreateCH_Gen2_WatchHistoryInput!): CH_Gen2_WatchHistory
  createContent(input: CreateContentInput!): CH_Gen2_Content @aws_cognito_user_pools(cognito_groups : ["Admin", "ContentManager"])
  createUser(input: CreateUserInput!): CH_Gen2_User @aws_cognito_user_pools(cognito_groups : ["Admin"])
  deleteCH_Gen2_AudioTrack(input: DeleteCH_Gen2_AudioTrackInput!): CH_Gen2_AudioTrack
  deleteCH_Gen2_Category(input: DeleteCH_Gen2_CategoryInput!): CH_Gen2_Category
  deleteCH_Gen2_Content(input: DeleteCH_Gen2_ContentInput!): CH_Gen2_Content
  deleteCH_Gen2_Country(input: DeleteCH_Gen2_CountryInput!): CH_Gen2_Country
  deleteCH_Gen2_Favorite(input: DeleteCH_Gen2_FavoriteInput!): CH_Gen2_Favorite
  deleteCH_Gen2_Genre(input: DeleteCH_Gen2_GenreInput!): CH_Gen2_Genre
  deleteCH_Gen2_Invoice(input: DeleteCH_Gen2_InvoiceInput!): CH_Gen2_Invoice
  deleteCH_Gen2_Notification(input: DeleteCH_Gen2_NotificationInput!): CH_Gen2_Notification
  deleteCH_Gen2_Payment(input: DeleteCH_Gen2_PaymentInput!): CH_Gen2_Payment
  deleteCH_Gen2_Review(input: DeleteCH_Gen2_ReviewInput!): CH_Gen2_Review
  deleteCH_Gen2_Subscription(input: DeleteCH_Gen2_SubscriptionInput!): CH_Gen2_Subscription
  deleteCH_Gen2_SubscriptionPlan(input: DeleteCH_Gen2_SubscriptionPlanInput!): CH_Gen2_SubscriptionPlan
  deleteCH_Gen2_Subtitle(input: DeleteCH_Gen2_SubtitleInput!): CH_Gen2_Subtitle
  deleteCH_Gen2_User(input: DeleteCH_Gen2_UserInput!): CH_Gen2_User
  deleteCH_Gen2_WatchHistory(input: DeleteCH_Gen2_WatchHistoryInput!): CH_Gen2_WatchHistory
  updateCH_Gen2_AudioTrack(input: UpdateCH_Gen2_AudioTrackInput!): CH_Gen2_AudioTrack
  updateCH_Gen2_Category(input: UpdateCH_Gen2_CategoryInput!): CH_Gen2_Category
  updateCH_Gen2_Content(input: UpdateCH_Gen2_ContentInput!): CH_Gen2_Content
  updateCH_Gen2_Country(input: UpdateCH_Gen2_CountryInput!): CH_Gen2_Country
  updateCH_Gen2_Favorite(input: UpdateCH_Gen2_FavoriteInput!): CH_Gen2_Favorite
  updateCH_Gen2_Genre(input: UpdateCH_Gen2_GenreInput!): CH_Gen2_Genre
  updateCH_Gen2_Invoice(input: UpdateCH_Gen2_InvoiceInput!): CH_Gen2_Invoice
  updateCH_Gen2_Notification(input: UpdateCH_Gen2_NotificationInput!): CH_Gen2_Notification
  updateCH_Gen2_Payment(input: UpdateCH_Gen2_PaymentInput!): CH_Gen2_Payment
  updateCH_Gen2_Review(input: UpdateCH_Gen2_ReviewInput!): CH_Gen2_Review
  updateCH_Gen2_Subscription(input: UpdateCH_Gen2_SubscriptionInput!): CH_Gen2_Subscription
  updateCH_Gen2_SubscriptionPlan(input: UpdateCH_Gen2_SubscriptionPlanInput!): CH_Gen2_SubscriptionPlan
  updateCH_Gen2_Subtitle(input: UpdateCH_Gen2_SubtitleInput!): CH_Gen2_Subtitle
  updateCH_Gen2_User(input: UpdateCH_Gen2_UserInput!): CH_Gen2_User
  updateCH_Gen2_WatchHistory(input: UpdateCH_Gen2_WatchHistoryInput!): CH_Gen2_WatchHistory
  updateContent(id: ID!, input: UpdateContentInput!): CH_Gen2_Content @aws_cognito_user_pools(cognito_groups : ["Admin", "ContentManager"])
  updateUser(id: ID!, input: UpdateUserInput!): CH_Gen2_User @aws_cognito_user_pools
}

type Query {
  getCH_Gen2_AudioTrack(id: ID!, sortOrder: Int!): CH_Gen2_AudioTrack
  getCH_Gen2_Category(id: ID!, sortOrder: Int!): CH_Gen2_Category
  getCH_Gen2_Content(id: ID!, sortOrder: Int!): CH_Gen2_Content
  getCH_Gen2_Country(id: ID!, sortOrder: Int!): CH_Gen2_Country
  getCH_Gen2_Favorite(createdAt: AWSDateTime!, id: ID!): CH_Gen2_Favorite
  getCH_Gen2_Genre(id: ID!, sortOrder: Int!): CH_Gen2_Genre
  getCH_Gen2_Invoice(dueDate: String!, id: ID!): CH_Gen2_Invoice
  getCH_Gen2_Notification(createdAt: AWSDateTime!, id: ID!): CH_Gen2_Notification
  getCH_Gen2_Payment(id: ID!, sortOrder: Int!): CH_Gen2_Payment
  getCH_Gen2_Review(createdAt: AWSDateTime!, id: ID!): CH_Gen2_Review
  getCH_Gen2_Subscription(id: ID!, sortOrder: Int!): CH_Gen2_Subscription
  getCH_Gen2_SubscriptionPlan(id: ID!, sortOrder: Int!): CH_Gen2_SubscriptionPlan
  getCH_Gen2_Subtitle(id: ID!, sortOrder: Int!): CH_Gen2_Subtitle
  getCH_Gen2_User(id: ID!, lastLogin: AWSDateTime!): CH_Gen2_User
  getCH_Gen2_WatchHistory(id: ID!, lastWatchedAt: AWSDateTime!): CH_Gen2_WatchHistory
  getContent(id: ID!): CH_Gen2_Content @aws_api_key @aws_cognito_user_pools @aws_iam
  getUser(id: ID!): CH_Gen2_User @aws_api_key @aws_cognito_user_pools @aws_iam
  listCH_Gen2_AudioTracks(filter: TableCH_Gen2_AudioTrackFilterInput, limit: Int, nextToken: String): CH_Gen2_AudioTrackConnection
  listCH_Gen2_Categories(filter: TableCH_Gen2_CategoryFilterInput, limit: Int, nextToken: String): CH_Gen2_CategoryConnection
  listCH_Gen2_Contents(filter: TableCH_Gen2_ContentFilterInput, limit: Int, nextToken: String): CH_Gen2_ContentConnection
  listCH_Gen2_Countries(filter: TableCH_Gen2_CountryFilterInput, limit: Int, nextToken: String): CH_Gen2_CountryConnection
  listCH_Gen2_Favorites(filter: TableCH_Gen2_FavoriteFilterInput, limit: Int, nextToken: String): CH_Gen2_FavoriteConnection
  listCH_Gen2_Genres(filter: TableCH_Gen2_GenreFilterInput, limit: Int, nextToken: String): CH_Gen2_GenreConnection
  listCH_Gen2_Invoices(filter: TableCH_Gen2_InvoiceFilterInput, limit: Int, nextToken: String): CH_Gen2_InvoiceConnection
  listCH_Gen2_Notifications(filter: TableCH_Gen2_NotificationFilterInput, limit: Int, nextToken: String): CH_Gen2_NotificationConnection
  listCH_Gen2_Payments(filter: TableCH_Gen2_PaymentFilterInput, limit: Int, nextToken: String): CH_Gen2_PaymentConnection
  listCH_Gen2_Reviews(filter: TableCH_Gen2_ReviewFilterInput, limit: Int, nextToken: String): CH_Gen2_ReviewConnection
  listCH_Gen2_SubscriptionPlans(filter: TableCH_Gen2_SubscriptionPlanFilterInput, limit: Int, nextToken: String): CH_Gen2_SubscriptionPlanConnection
  listCH_Gen2_Subscriptions(filter: TableCH_Gen2_SubscriptionFilterInput, limit: Int, nextToken: String): CH_Gen2_SubscriptionConnection
  listCH_Gen2_Subtitles(filter: TableCH_Gen2_SubtitleFilterInput, limit: Int, nextToken: String): CH_Gen2_SubtitleConnection
  listCH_Gen2_Users(filter: TableCH_Gen2_UserFilterInput, limit: Int, nextToken: String): CH_Gen2_UserConnection
  listCH_Gen2_WatchHistories(filter: TableCH_Gen2_WatchHistoryFilterInput, limit: Int, nextToken: String): CH_Gen2_WatchHistoryConnection
  listContents: [CH_Gen2_Content!] @aws_api_key @aws_cognito_user_pools @aws_iam
  listUsers: [CH_Gen2_User!] @aws_api_key @aws_cognito_user_pools(cognito_groups : ["Admin"]) @aws_iam
  queryCH_Gen2_AudioTracksByIdCodeIndex(after: String, first: Int, id: ID!): CH_Gen2_AudioTrackConnection
  queryCH_Gen2_AudioTracksByIdLanguageIndex(after: String, first: Int, id: ID!): CH_Gen2_AudioTrackConnection
  queryCH_Gen2_CategoriesByIdNameIndex(after: String, first: Int, id: ID!): CH_Gen2_CategoryConnection
  queryCH_Gen2_ContentsByIdFeaturedIndex(after: String, first: Int, id: ID!): CH_Gen2_ContentConnection
  queryCH_Gen2_ContentsByIdMaturityRatingIndex(after: String, first: Int, id: ID!): CH_Gen2_ContentConnection
  queryCH_Gen2_ContentsByIdPartnerIdIndex(after: String, first: Int, id: ID!): CH_Gen2_ContentConnection
  queryCH_Gen2_ContentsByIdReleaseDateIndex(after: String, first: Int, id: ID!): CH_Gen2_ContentConnection
  queryCH_Gen2_ContentsByIdTitleIndex(after: String, first: Int, id: ID!): CH_Gen2_ContentConnection
  queryCH_Gen2_CountriesByIdCodeIndex(after: String, first: Int, id: ID!): CH_Gen2_CountryConnection
  queryCH_Gen2_CountriesByIdNameIndex(after: String, first: Int, id: ID!): CH_Gen2_CountryConnection
  queryCH_Gen2_FavoritesByIdContentIdIndex(after: String, first: Int, id: ID!): CH_Gen2_FavoriteConnection
  queryCH_Gen2_FavoritesByIdUserIdIndex(after: String, first: Int, id: ID!): CH_Gen2_FavoriteConnection
  queryCH_Gen2_GenresByIdNameIndex(after: String, first: Int, id: ID!): CH_Gen2_GenreConnection
  queryCH_Gen2_InvoicesByIdDueDateIndex(after: String, first: Int, id: ID!): CH_Gen2_InvoiceConnection
  queryCH_Gen2_InvoicesByIdInvoiceNumberIndex(after: String, first: Int, id: ID!): CH_Gen2_InvoiceConnection
  queryCH_Gen2_InvoicesByIdPaymentIdIndex(after: String, first: Int, id: ID!): CH_Gen2_InvoiceConnection
  queryCH_Gen2_InvoicesByIdSubscriptionIdIndex(after: String, first: Int, id: ID!): CH_Gen2_InvoiceConnection
  queryCH_Gen2_InvoicesByIdUserIdIndex(after: String, first: Int, id: ID!): CH_Gen2_InvoiceConnection
  queryCH_Gen2_NotificationsByIdIsReadIndex(after: String, first: Int, id: ID!): CH_Gen2_NotificationConnection
  queryCH_Gen2_NotificationsByIdRelatedIdIndex(after: String, first: Int, id: ID!): CH_Gen2_NotificationConnection
  queryCH_Gen2_NotificationsByIdRelatedTypeIndex(after: String, first: Int, id: ID!): CH_Gen2_NotificationConnection
  queryCH_Gen2_NotificationsByIdTypeIndex(after: String, first: Int, id: ID!): CH_Gen2_NotificationConnection
  queryCH_Gen2_NotificationsByIdUserIdIndex(after: String, first: Int, id: ID!): CH_Gen2_NotificationConnection
  queryCH_Gen2_PaymentsByIdCurrencyIndex(after: String, first: Int, id: ID!): CH_Gen2_PaymentConnection
  queryCH_Gen2_PaymentsByIdStatusIndex(after: String, first: Int, id: ID!): CH_Gen2_PaymentConnection
  queryCH_Gen2_PaymentsByIdSubsriptionIdIndex(after: String, first: Int, id: ID!): CH_Gen2_PaymentConnection
  queryCH_Gen2_PaymentsByIdTransactionIdIndex(after: String, first: Int, id: ID!): CH_Gen2_PaymentConnection
  queryCH_Gen2_PaymentsByIdUserIdIndex(after: String, first: Int, id: ID!): CH_Gen2_PaymentConnection
  queryCH_Gen2_ReviewsByIdContentIdIndex(after: String, first: Int, id: ID!): CH_Gen2_ReviewConnection
  queryCH_Gen2_ReviewsByIdIsApprovedIndex(after: String, first: Int, id: ID!): CH_Gen2_ReviewConnection
  queryCH_Gen2_ReviewsByIdUserIdIndex(after: String, first: Int, id: ID!): CH_Gen2_ReviewConnection
  queryCH_Gen2_SubscriptionPlansByIdCurrencyIndex(after: String, first: Int, id: ID!): CH_Gen2_SubscriptionPlanConnection
  queryCH_Gen2_SubscriptionPlansByIdNameIndex(after: String, first: Int, id: ID!): CH_Gen2_SubscriptionPlanConnection
  queryCH_Gen2_SubscriptionsByIdPaymentMethodIndex(after: String, first: Int, id: ID!): CH_Gen2_SubscriptionConnection
  queryCH_Gen2_SubscriptionsByIdPlanIdIndex(after: String, first: Int, id: ID!): CH_Gen2_SubscriptionConnection
  queryCH_Gen2_SubscriptionsByIdStatusIndex(after: String, first: Int, id: ID!): CH_Gen2_SubscriptionConnection
  queryCH_Gen2_SubscriptionsByIdUserIdIndex(after: String, first: Int, id: ID!): CH_Gen2_SubscriptionConnection
  queryCH_Gen2_SubtitlesByIdCodeIndex(after: String, first: Int, id: ID!): CH_Gen2_SubtitleConnection
  queryCH_Gen2_SubtitlesByIdLanguageIndex(after: String, first: Int, id: ID!): CH_Gen2_SubtitleConnection
  queryCH_Gen2_UsersByIdCognitoIdIndex(after: String, first: Int, id: ID!): CH_Gen2_UserConnection
  queryCH_Gen2_UsersByIdEmailIndex(after: String, first: Int, id: ID!): CH_Gen2_UserConnection
  queryCH_Gen2_UsersByIdPhoneNumberIndex(after: String, first: Int, id: ID!): CH_Gen2_UserConnection
  queryCH_Gen2_UsersByIdSubscriptionStatusIndex(after: String, first: Int, id: ID!): CH_Gen2_UserConnection
  queryCH_Gen2_UsersByIdUsernameIndex(after: String, first: Int, id: ID!): CH_Gen2_UserConnection
  queryCH_Gen2_WatchHistoriesByIdContentIdIndex(after: String, first: Int, id: ID!): CH_Gen2_WatchHistoryConnection
  queryCH_Gen2_WatchHistoriesByIdUserIdIndex(after: String, first: Int, id: ID!): CH_Gen2_WatchHistoryConnection
}

type Subscription {
  onContentCreated: CH_Gen2_Content @aws_api_key @aws_cognito_user_pools @aws_iam @aws_subscribe(mutations : ["createContent"])
  onCreateCH_Gen2_AudioTrack(code: String, createdAt: AWSDateTime, id: ID, language: String, sortOrder: Int): CH_Gen2_AudioTrack @aws_subscribe(mutations : ["createCH_Gen2_AudioTrack"])
  onCreateCH_Gen2_Category(createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int, updatedAt: AWSDateTime): CH_Gen2_Category @aws_subscribe(mutations : ["createCH_Gen2_Category"])
  onCreateCH_Gen2_Content(description: String, id: ID, localTitle: String, partnerId: ID, title: String): CH_Gen2_Content @aws_subscribe(mutations : ["createCH_Gen2_Content"])
  onCreateCH_Gen2_Country(code: String, createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int): CH_Gen2_Country @aws_subscribe(mutations : ["createCH_Gen2_Country"])
  onCreateCH_Gen2_Favorite(contentId: ID, createdAt: AWSDateTime, id: ID, userId: ID): CH_Gen2_Favorite @aws_subscribe(mutations : ["createCH_Gen2_Favorite"])
  onCreateCH_Gen2_Genre(createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int, updatedAt: AWSDateTime): CH_Gen2_Genre @aws_subscribe(mutations : ["createCH_Gen2_Genre"])
  onCreateCH_Gen2_Invoice(id: ID, invoiceNumber: String, paymentId: ID, subscriptionId: ID, userId: ID): CH_Gen2_Invoice @aws_subscribe(mutations : ["createCH_Gen2_Invoice"])
  onCreateCH_Gen2_Notification(id: ID, isRead: Boolean, message: String, title: String, userId: ID): CH_Gen2_Notification @aws_subscribe(mutations : ["createCH_Gen2_Notification"])
  onCreateCH_Gen2_Payment(amount: Float, currency: String, id: ID, subscriptionId: ID, userId: ID): CH_Gen2_Payment @aws_subscribe(mutations : ["createCH_Gen2_Payment"])
  onCreateCH_Gen2_Review(contentId: ID, id: ID, rating: Int, reviewText: String, userId: ID): CH_Gen2_Review @aws_subscribe(mutations : ["createCH_Gen2_Review"])
  onCreateCH_Gen2_Subscription(endDate: String, id: ID, planId: ID, startDate: String, userId: ID): CH_Gen2_Subscription @aws_subscribe(mutations : ["createCH_Gen2_Subscription"])
  onCreateCH_Gen2_SubscriptionPlan(currency: String, description: String, id: ID, name: String, price: Float): CH_Gen2_SubscriptionPlan @aws_subscribe(mutations : ["createCH_Gen2_SubscriptionPlan"])
  onCreateCH_Gen2_Subtitle(code: String, createdAt: AWSDateTime, id: ID, language: String, sortOrder: Int): CH_Gen2_Subtitle @aws_subscribe(mutations : ["createCH_Gen2_Subtitle"])
  onCreateCH_Gen2_User(cognitoId: String, email: String, firstName: String, id: ID, username: String): CH_Gen2_User @aws_subscribe(mutations : ["createCH_Gen2_User"])
  onCreateCH_Gen2_WatchHistory(contentId: ID, duration: Int, id: ID, progress: Int, userId: ID): CH_Gen2_WatchHistory @aws_subscribe(mutations : ["createCH_Gen2_WatchHistory"])
  onDeleteCH_Gen2_AudioTrack(code: String, createdAt: AWSDateTime, id: ID, language: String, sortOrder: Int): CH_Gen2_AudioTrack @aws_subscribe(mutations : ["deleteCH_Gen2_AudioTrack"])
  onDeleteCH_Gen2_Category(createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int, updatedAt: AWSDateTime): CH_Gen2_Category @aws_subscribe(mutations : ["deleteCH_Gen2_Category"])
  onDeleteCH_Gen2_Content(description: String, id: ID, localTitle: String, partnerId: ID, title: String): CH_Gen2_Content @aws_subscribe(mutations : ["deleteCH_Gen2_Content"])
  onDeleteCH_Gen2_Country(code: String, createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int): CH_Gen2_Country @aws_subscribe(mutations : ["deleteCH_Gen2_Country"])
  onDeleteCH_Gen2_Favorite(contentId: ID, createdAt: AWSDateTime, id: ID, userId: ID): CH_Gen2_Favorite @aws_subscribe(mutations : ["deleteCH_Gen2_Favorite"])
  onDeleteCH_Gen2_Genre(createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int, updatedAt: AWSDateTime): CH_Gen2_Genre @aws_subscribe(mutations : ["deleteCH_Gen2_Genre"])
  onDeleteCH_Gen2_Invoice(id: ID, invoiceNumber: String, paymentId: ID, subscriptionId: ID, userId: ID): CH_Gen2_Invoice @aws_subscribe(mutations : ["deleteCH_Gen2_Invoice"])
  onDeleteCH_Gen2_Notification(id: ID, isRead: Boolean, message: String, title: String, userId: ID): CH_Gen2_Notification @aws_subscribe(mutations : ["deleteCH_Gen2_Notification"])
  onDeleteCH_Gen2_Payment(amount: Float, currency: String, id: ID, subscriptionId: ID, userId: ID): CH_Gen2_Payment @aws_subscribe(mutations : ["deleteCH_Gen2_Payment"])
  onDeleteCH_Gen2_Review(contentId: ID, id: ID, rating: Int, reviewText: String, userId: ID): CH_Gen2_Review @aws_subscribe(mutations : ["deleteCH_Gen2_Review"])
  onDeleteCH_Gen2_Subscription(endDate: String, id: ID, planId: ID, startDate: String, userId: ID): CH_Gen2_Subscription @aws_subscribe(mutations : ["deleteCH_Gen2_Subscription"])
  onDeleteCH_Gen2_SubscriptionPlan(currency: String, description: String, id: ID, name: String, price: Float): CH_Gen2_SubscriptionPlan @aws_subscribe(mutations : ["deleteCH_Gen2_SubscriptionPlan"])
  onDeleteCH_Gen2_Subtitle(code: String, createdAt: AWSDateTime, id: ID, language: String, sortOrder: Int): CH_Gen2_Subtitle @aws_subscribe(mutations : ["deleteCH_Gen2_Subtitle"])
  onDeleteCH_Gen2_User(cognitoId: String, email: String, firstName: String, id: ID, username: String): CH_Gen2_User @aws_subscribe(mutations : ["deleteCH_Gen2_User"])
  onDeleteCH_Gen2_WatchHistory(contentId: ID, duration: Int, id: ID, progress: Int, userId: ID): CH_Gen2_WatchHistory @aws_subscribe(mutations : ["deleteCH_Gen2_WatchHistory"])
  onUpdateCH_Gen2_AudioTrack(code: String, createdAt: AWSDateTime, id: ID, language: String, sortOrder: Int): CH_Gen2_AudioTrack @aws_subscribe(mutations : ["updateCH_Gen2_AudioTrack"])
  onUpdateCH_Gen2_Category(createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int, updatedAt: AWSDateTime): CH_Gen2_Category @aws_subscribe(mutations : ["updateCH_Gen2_Category"])
  onUpdateCH_Gen2_Content(description: String, id: ID, localTitle: String, partnerId: ID, title: String): CH_Gen2_Content @aws_subscribe(mutations : ["updateCH_Gen2_Content"])
  onUpdateCH_Gen2_Country(code: String, createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int): CH_Gen2_Country @aws_subscribe(mutations : ["updateCH_Gen2_Country"])
  onUpdateCH_Gen2_Favorite(contentId: ID, createdAt: AWSDateTime, id: ID, userId: ID): CH_Gen2_Favorite @aws_subscribe(mutations : ["updateCH_Gen2_Favorite"])
  onUpdateCH_Gen2_Genre(createdAt: AWSDateTime, id: ID, name: String, sortOrder: Int, updatedAt: AWSDateTime): CH_Gen2_Genre @aws_subscribe(mutations : ["updateCH_Gen2_Genre"])
  onUpdateCH_Gen2_Invoice(id: ID, invoiceNumber: String, paymentId: ID, subscriptionId: ID, userId: ID): CH_Gen2_Invoice @aws_subscribe(mutations : ["updateCH_Gen2_Invoice"])
  onUpdateCH_Gen2_Notification(id: ID, isRead: Boolean, message: String, title: String, userId: ID): CH_Gen2_Notification @aws_subscribe(mutations : ["updateCH_Gen2_Notification"])
  onUpdateCH_Gen2_Payment(amount: Float, currency: String, id: ID, subscriptionId: ID, userId: ID): CH_Gen2_Payment @aws_subscribe(mutations : ["updateCH_Gen2_Payment"])
  onUpdateCH_Gen2_Review(contentId: ID, id: ID, rating: Int, reviewText: String, userId: ID): CH_Gen2_Review @aws_subscribe(mutations : ["updateCH_Gen2_Review"])
  onUpdateCH_Gen2_Subscription(endDate: String, id: ID, planId: ID, startDate: String, userId: ID): CH_Gen2_Subscription @aws_subscribe(mutations : ["updateCH_Gen2_Subscription"])
  onUpdateCH_Gen2_SubscriptionPlan(currency: String, description: String, id: ID, name: String, price: Float): CH_Gen2_SubscriptionPlan @aws_subscribe(mutations : ["updateCH_Gen2_SubscriptionPlan"])
  onUpdateCH_Gen2_Subtitle(code: String, createdAt: AWSDateTime, id: ID, language: String, sortOrder: Int): CH_Gen2_Subtitle @aws_subscribe(mutations : ["updateCH_Gen2_Subtitle"])
  onUpdateCH_Gen2_User(cognitoId: String, email: String, firstName: String, id: ID, username: String): CH_Gen2_User @aws_subscribe(mutations : ["updateCH_Gen2_User"])
  onUpdateCH_Gen2_WatchHistory(contentId: ID, duration: Int, id: ID, progress: Int, userId: ID): CH_Gen2_WatchHistory @aws_subscribe(mutations : ["updateCH_Gen2_WatchHistory"])
  onUserCreated: CH_Gen2_User @aws_cognito_user_pools(cognito_groups : ["Admin"]) @aws_subscribe(mutations : ["createUser"])
}

enum CH_Gen2_AccountStatus {
  ACTIVE
  DELETED
  SUSPENDED
}

enum CH_Gen2_BillingCycle {
  LIFETIME
  MONTHLY
  QUARTERLY
  YEARLY
}

enum CH_Gen2_ContentStatus {
  ACTIVE
  DRAFT
  INACTIVE
}

enum CH_Gen2_ContentType {
  LIVE
  MOVIE
  TV_SHOW
  WEB_SERIES
}

enum CH_Gen2_Gender {
  FEMALE
  MALE
  OTHER
  PREFER_NOT_TO_SAY
}

enum CH_Gen2_InvoiceStatus {
  CANCELLED
  DRAFT
  OVERDUE
  PAID
  SENT
}

enum CH_Gen2_NotificationType {
  CONTENT
  PAYMENT
  PROMOTIONAL
  SYSTEM
}

enum CH_Gen2_PaymentStatus {
  COMPLETED
  FAILED
  PENDING
  REFUNDED
}

enum CH_Gen2_SubscriptionStatus {
  ACTIVE
  CANCELLED
  EXPIRED
  INACTIVE
  PENDING
}

enum CH_Gen2_VideoQuality {
  FHD
  HD
  SD
  UHD
}

input CreateCH_Gen2_AudioTrackInput {
  code: String
  createdAt: AWSDateTime!
  id: ID!
  language: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

input CreateCH_Gen2_CategoryInput {
  createdAt: AWSDateTime!
  id: ID!
  name: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

input CreateCH_Gen2_ContentInput {
  analyticsId: Int
  audienceDislike: Int!
  audienceLike: Int!
  audienceRating: Float!
  createdAt: AWSDateTime!
  description: String
  duration: Int!
  id: ID!
  imagesDetails: AWSJSON
  isFeatured: Boolean!
  localTitle: String!
  maturityRating: String!
  partnerId: ID
  releaseDate: String
  sortOrder: Int!
  title: String!
  updatedAt: AWSDateTime!
  videoConverted: AWSJSON!
  videoId: ID!
  videoOriginal: AWSJSON
}

input CreateCH_Gen2_CountryInput {
  code: String
  createdAt: AWSDateTime!
  id: ID!
  name: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

input CreateCH_Gen2_FavoriteInput {
  contentId: ID!
  createdAt: AWSDateTime!
  id: ID!
  userId: ID!
}

input CreateCH_Gen2_GenreInput {
  createdAt: AWSDateTime!
  id: ID!
  name: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

input CreateCH_Gen2_InvoiceInput {
  amount: Float!
  billingPeriod: String
  createdAt: AWSDateTime!
  currency: String!
  discountAmount: Float
  dueDate: String!
  id: ID!
  invoiceDate: String!
  invoiceNumber: String!
  paymentId: ID
  pdfUrl: String
  subscriptionId: ID
  taxAmount: Float
  totalAmount: Float!
  updatedAt: AWSDateTime!
  userId: ID!
}

input CreateCH_Gen2_NotificationInput {
  createdAt: AWSDateTime!
  id: ID!
  isRead: Boolean!
  message: String!
  readAt: AWSDateTime
  relatedId: String
  relatedType: String
  title: String!
  userId: ID!
}

input CreateCH_Gen2_PaymentInput {
  amount: Float!
  createdAt: AWSDateTime!
  currency: String!
  description: String
  id: ID!
  metadata: AWSJSON
  paymentDate: AWSDateTime!
  paymentGateway: String!
  paymentMethod: String!
  sortOrder: Int!
  subscriptionId: ID
  transactionId: String!
  updatedAt: AWSDateTime!
  userId: ID!
}

input CreateCH_Gen2_ReviewInput {
  contentId: ID!
  createdAt: AWSDateTime!
  id: ID!
  isApproved: Boolean!
  rating: Int!
  reviewText: String
  updatedAt: AWSDateTime!
  userId: ID!
}

input CreateCH_Gen2_SubscriptionInput {
  autoRenew: Boolean!
  cancellationDate: String
  cancellationReason: String
  createdAt: AWSDateTime!
  endDate: String!
  id: ID!
  lastPaymentDate: AWSDateTime
  nextBillingDate: String
  paymentMethod: String
  planId: ID!
  sortOrder: Int!
  startDate: String!
  updatedAt: AWSDateTime!
  userId: ID!
}

input CreateCH_Gen2_SubscriptionPlanInput {
  createdAt: AWSDateTime!
  currency: String!
  description: String
  durationDays: Int!
  features: AWSJSON
  id: ID!
  isActive: Boolean!
  maxScreens: Int!
  name: String!
  price: Float!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

input CreateCH_Gen2_SubtitleInput {
  code: String
  createdAt: AWSDateTime!
  id: ID!
  language: String!
  sortOrder: Int!
  updatedAt: AWSDateTime!
}

input CreateCH_Gen2_UserInput {
  cognitoId: String!
  country: String
  createdAt: AWSDateTime!
  dateOfBirth: String
  email: String!
  firstName: String
  id: ID!
  languagePreference: String!
  lastLogin: AWSDateTime!
  lastName: String
  maturityPreference: String!
  phoneNumber: String
  profilePicture: String
  subscriptionStatus: String!
  updatedAt: AWSDateTime!
  username: String
}

input CreateCH_Gen2_WatchHistoryInput {
  contentId: ID!
  createdAt: AWSDateTime!
  deviceInfo: AWSJSON
  duration: Int!
  id: ID!
  lastWatchedAt: AWSDateTime!
  progress: Int!
  updatedAt: AWSDateTime!
  userId: ID!
}

input CreateContentInput {
  analyticsId: Int
  audienceDislike: Int
  audienceLike: Int
  audienceRating: Float
  description: String
  duration: Int
  imagesDetails: AWSJSON
  isFeatured: Boolean
  localTitle: String!
  maturityRating: String!
  partnerId: ID
  releaseDate: String
  sortOrder: Int
  status: CH_Gen2_ContentStatus
  title: String!
  type: CH_Gen2_ContentType!
  videoConverted: AWSJSON!
  videoId: ID!
  videoOriginal: AWSJSON
}

input CreateUserInput {
  cognitoId: String!
  country: String
  dateOfBirth: String
  email: String!
  firstName: String
  gender: CH_Gen2_Gender
  languagePreference: String
  lastName: String
  maturityPreference: String
  phoneNumber: String
  profilePicture: String
  username: String
}

input DeleteCH_Gen2_AudioTrackInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_CategoryInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_ContentInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_CountryInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_FavoriteInput {
  createdAt: AWSDateTime!
  id: ID!
}

input DeleteCH_Gen2_GenreInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_InvoiceInput {
  dueDate: String!
  id: ID!
}

input DeleteCH_Gen2_NotificationInput {
  createdAt: AWSDateTime!
  id: ID!
}

input DeleteCH_Gen2_PaymentInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_ReviewInput {
  createdAt: AWSDateTime!
  id: ID!
}

input DeleteCH_Gen2_SubscriptionInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_SubscriptionPlanInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_SubtitleInput {
  id: ID!
  sortOrder: Int!
}

input DeleteCH_Gen2_UserInput {
  id: ID!
  lastLogin: AWSDateTime!
}

input DeleteCH_Gen2_WatchHistoryInput {
  id: ID!
  lastWatchedAt: AWSDateTime!
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input TableBooleanFilterInput {
  attributeExists: Boolean
  eq: Boolean
  ne: Boolean
}

input TableCH_Gen2_AudioTrackFilterInput {
  code: TableStringFilterInput
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  language: TableStringFilterInput
  sortOrder: TableIntFilterInput
  updatedAt: TableStringFilterInput
}

input TableCH_Gen2_CategoryFilterInput {
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  name: TableStringFilterInput
  sortOrder: TableIntFilterInput
  updatedAt: TableStringFilterInput
}

input TableCH_Gen2_ContentFilterInput {
  analyticsId: TableIntFilterInput
  audienceDislike: TableIntFilterInput
  audienceLike: TableIntFilterInput
  audienceRating: TableFloatFilterInput
  createdAt: TableStringFilterInput
  description: TableStringFilterInput
  duration: TableIntFilterInput
  id: TableIDFilterInput
  isFeatured: TableBooleanFilterInput
  localTitle: TableStringFilterInput
  maturityRating: TableStringFilterInput
  partnerId: TableIDFilterInput
  releaseDate: TableStringFilterInput
  sortOrder: TableIntFilterInput
  title: TableStringFilterInput
  updatedAt: TableStringFilterInput
  videoId: TableIDFilterInput
}

input TableCH_Gen2_CountryFilterInput {
  code: TableStringFilterInput
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  name: TableStringFilterInput
  sortOrder: TableIntFilterInput
  updatedAt: TableStringFilterInput
}

input TableCH_Gen2_FavoriteFilterInput {
  contentId: TableIDFilterInput
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  userId: TableIDFilterInput
}

input TableCH_Gen2_GenreFilterInput {
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  name: TableStringFilterInput
  sortOrder: TableIntFilterInput
  updatedAt: TableStringFilterInput
}

input TableCH_Gen2_InvoiceFilterInput {
  amount: TableFloatFilterInput
  billingPeriod: TableStringFilterInput
  createdAt: TableStringFilterInput
  currency: TableStringFilterInput
  discountAmount: TableFloatFilterInput
  dueDate: TableStringFilterInput
  id: TableIDFilterInput
  invoiceDate: TableStringFilterInput
  invoiceNumber: TableStringFilterInput
  paymentId: TableIDFilterInput
  pdfUrl: TableStringFilterInput
  subscriptionId: TableIDFilterInput
  taxAmount: TableFloatFilterInput
  totalAmount: TableFloatFilterInput
  updatedAt: TableStringFilterInput
  userId: TableIDFilterInput
}

input TableCH_Gen2_NotificationFilterInput {
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  isRead: TableBooleanFilterInput
  message: TableStringFilterInput
  readAt: TableStringFilterInput
  relatedId: TableStringFilterInput
  relatedType: TableStringFilterInput
  title: TableStringFilterInput
  userId: TableIDFilterInput
}

input TableCH_Gen2_PaymentFilterInput {
  amount: TableFloatFilterInput
  createdAt: TableStringFilterInput
  currency: TableStringFilterInput
  description: TableStringFilterInput
  id: TableIDFilterInput
  paymentDate: TableStringFilterInput
  paymentGateway: TableStringFilterInput
  paymentMethod: TableStringFilterInput
  sortOrder: TableIntFilterInput
  subscriptionId: TableIDFilterInput
  transactionId: TableStringFilterInput
  updatedAt: TableStringFilterInput
  userId: TableIDFilterInput
}

input TableCH_Gen2_ReviewFilterInput {
  contentId: TableIDFilterInput
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  isApproved: TableBooleanFilterInput
  rating: TableIntFilterInput
  reviewText: TableStringFilterInput
  updatedAt: TableStringFilterInput
  userId: TableIDFilterInput
}

input TableCH_Gen2_SubscriptionFilterInput {
  autoRenew: TableBooleanFilterInput
  cancellationDate: TableStringFilterInput
  cancellationReason: TableStringFilterInput
  createdAt: TableStringFilterInput
  endDate: TableStringFilterInput
  id: TableIDFilterInput
  lastPaymentDate: TableStringFilterInput
  nextBillingDate: TableStringFilterInput
  paymentMethod: TableStringFilterInput
  planId: TableIDFilterInput
  sortOrder: TableIntFilterInput
  startDate: TableStringFilterInput
  updatedAt: TableStringFilterInput
  userId: TableIDFilterInput
}

input TableCH_Gen2_SubscriptionPlanFilterInput {
  createdAt: TableStringFilterInput
  currency: TableStringFilterInput
  description: TableStringFilterInput
  durationDays: TableIntFilterInput
  id: TableIDFilterInput
  isActive: TableBooleanFilterInput
  maxScreens: TableIntFilterInput
  name: TableStringFilterInput
  price: TableFloatFilterInput
  sortOrder: TableIntFilterInput
  updatedAt: TableStringFilterInput
}

input TableCH_Gen2_SubtitleFilterInput {
  code: TableStringFilterInput
  createdAt: TableStringFilterInput
  id: TableIDFilterInput
  language: TableStringFilterInput
  sortOrder: TableIntFilterInput
  updatedAt: TableStringFilterInput
}

input TableCH_Gen2_UserFilterInput {
  cognitoId: TableStringFilterInput
  country: TableStringFilterInput
  createdAt: TableStringFilterInput
  dateOfBirth: TableStringFilterInput
  email: TableStringFilterInput
  firstName: TableStringFilterInput
  id: TableIDFilterInput
  languagePreference: TableStringFilterInput
  lastLogin: TableStringFilterInput
  lastName: TableStringFilterInput
  maturityPreference: TableStringFilterInput
  phoneNumber: TableStringFilterInput
  profilePicture: TableStringFilterInput
  subscriptionStatus: TableStringFilterInput
  updatedAt: TableStringFilterInput
  username: TableStringFilterInput
}

input TableCH_Gen2_WatchHistoryFilterInput {
  contentId: TableIDFilterInput
  createdAt: TableStringFilterInput
  duration: TableIntFilterInput
  id: TableIDFilterInput
  lastWatchedAt: TableStringFilterInput
  progress: TableIntFilterInput
  updatedAt: TableStringFilterInput
  userId: TableIDFilterInput
}

input TableFloatFilterInput {
  attributeExists: Boolean
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input TableIDFilterInput {
  attributeExists: Boolean
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input TableIntFilterInput {
  attributeExists: Boolean
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input TableStringFilterInput {
  attributeExists: Boolean
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input UpdateCH_Gen2_AudioTrackInput {
  code: String
  createdAt: AWSDateTime
  id: ID!
  language: String
  sortOrder: Int!
  updatedAt: AWSDateTime
}

input UpdateCH_Gen2_CategoryInput {
  createdAt: AWSDateTime
  id: ID!
  name: String
  sortOrder: Int!
  updatedAt: AWSDateTime
}

input UpdateCH_Gen2_ContentInput {
  analyticsId: Int
  audienceDislike: Int
  audienceLike: Int
  audienceRating: Float
  createdAt: AWSDateTime
  description: String
  duration: Int
  id: ID!
  imagesDetails: AWSJSON
  isFeatured: Boolean
  localTitle: String
  maturityRating: String
  partnerId: ID
  releaseDate: String
  sortOrder: Int!
  title: String
  updatedAt: AWSDateTime
  videoConverted: AWSJSON
  videoId: ID
  videoOriginal: AWSJSON
}

input UpdateCH_Gen2_CountryInput {
  code: String
  createdAt: AWSDateTime
  id: ID!
  name: String
  sortOrder: Int!
  updatedAt: AWSDateTime
}

input UpdateCH_Gen2_FavoriteInput {
  contentId: ID
  createdAt: AWSDateTime!
  id: ID!
  userId: ID
}

input UpdateCH_Gen2_GenreInput {
  createdAt: AWSDateTime
  id: ID!
  name: String
  sortOrder: Int!
  updatedAt: AWSDateTime
}

input UpdateCH_Gen2_InvoiceInput {
  amount: Float
  billingPeriod: String
  createdAt: AWSDateTime
  currency: String
  discountAmount: Float
  dueDate: String!
  id: ID!
  invoiceDate: String
  invoiceNumber: String
  paymentId: ID
  pdfUrl: String
  subscriptionId: ID
  taxAmount: Float
  totalAmount: Float
  updatedAt: AWSDateTime
  userId: ID
}

input UpdateCH_Gen2_NotificationInput {
  createdAt: AWSDateTime!
  id: ID!
  isRead: Boolean
  message: String
  readAt: AWSDateTime
  relatedId: String
  relatedType: String
  title: String
  userId: ID
}

input UpdateCH_Gen2_PaymentInput {
  amount: Float
  createdAt: AWSDateTime
  currency: String
  description: String
  id: ID!
  metadata: AWSJSON
  paymentDate: AWSDateTime
  paymentGateway: String
  paymentMethod: String
  sortOrder: Int!
  subscriptionId: ID
  transactionId: String
  updatedAt: AWSDateTime
  userId: ID
}

input UpdateCH_Gen2_ReviewInput {
  contentId: ID
  createdAt: AWSDateTime!
  id: ID!
  isApproved: Boolean
  rating: Int
  reviewText: String
  updatedAt: AWSDateTime
  userId: ID
}

input UpdateCH_Gen2_SubscriptionInput {
  autoRenew: Boolean
  cancellationDate: String
  cancellationReason: String
  createdAt: AWSDateTime
  endDate: String
  id: ID!
  lastPaymentDate: AWSDateTime
  nextBillingDate: String
  paymentMethod: String
  planId: ID
  sortOrder: Int!
  startDate: String
  updatedAt: AWSDateTime
  userId: ID
}

input UpdateCH_Gen2_SubscriptionPlanInput {
  createdAt: AWSDateTime
  currency: String
  description: String
  durationDays: Int
  features: AWSJSON
  id: ID!
  isActive: Boolean
  maxScreens: Int
  name: String
  price: Float
  sortOrder: Int!
  updatedAt: AWSDateTime
}

input UpdateCH_Gen2_SubtitleInput {
  code: String
  createdAt: AWSDateTime
  id: ID!
  language: String
  sortOrder: Int!
  updatedAt: AWSDateTime
}

input UpdateCH_Gen2_UserInput {
  cognitoId: String
  country: String
  createdAt: AWSDateTime
  dateOfBirth: String
  email: String
  firstName: String
  id: ID!
  languagePreference: String
  lastLogin: AWSDateTime!
  lastName: String
  maturityPreference: String
  phoneNumber: String
  profilePicture: String
  subscriptionStatus: String
  updatedAt: AWSDateTime
  username: String
}

input UpdateCH_Gen2_WatchHistoryInput {
  contentId: ID
  createdAt: AWSDateTime
  deviceInfo: AWSJSON
  duration: Int
  id: ID!
  lastWatchedAt: AWSDateTime!
  progress: Int
  updatedAt: AWSDateTime
  userId: ID
}

input UpdateContentInput {
  analyticsId: Int
  audienceDislike: Int
  audienceLike: Int
  audienceRating: Float
  description: String
  duration: Int
  imagesDetails: AWSJSON
  isFeatured: Boolean
  localTitle: String
  maturityRating: String
  partnerId: ID
  releaseDate: String
  sortOrder: Int
  status: CH_Gen2_ContentStatus
  title: String
  type: CH_Gen2_ContentType
  videoConverted: AWSJSON
  videoId: ID
  videoOriginal: AWSJSON
}

input UpdateUserInput {
  country: String
  dateOfBirth: String
  firstName: String
  gender: CH_Gen2_Gender
  languagePreference: String
  lastName: String
  maturityPreference: String
  phoneNumber: String
  profilePicture: String
  username: String
}
